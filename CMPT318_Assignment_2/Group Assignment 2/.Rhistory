install.packages("ggplot2")
install.packages("ggplot2")
install.packages("cli")
install.packages("cli")
library(tidyverse)
print(mpg)
?mpg
print(mpg = 15)
print(mpg = ...)
print(mpg = 5)
print(mpg = '15')
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg)
print(mpg)
mtcars
nrows(mtcars)
nrow(mtcars)
ncol(mtcars)
?mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = hwy, y = cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = class, y = drv))
nrow(mpg[class == "pickup"])
nrow(mpg[mpg$class == "pickup"])
nrow(mpg[$class == "pickup"])
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = 'class'))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
col(mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = manufacturer))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = manufacturer))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, alpha = manufacturer))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = manufacturer))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = "green"))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), colour = "green"))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), colour = "green")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), colour = "darkgreen")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), colour = "darkblue")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), colour = "blue")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = cty))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = cty), colour = 'black')
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = cty, colour = 'black'))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = cty))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = cty))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = cty))
head(mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = cty, colour = cty))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, stroke = cty))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, stroke = model))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, stroke = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, stroke = displ))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, stroke = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, stroke = displ))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = cty > 20))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = cty > 25))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = cty > 25)) +
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = cty > 25, colour = hwy > 30)) +
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = hwy > 30)) +
facet_wrap(~ class, nrow = 2)
head(mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = hwy > 30)) +
facet_wrap(~ manufacturer, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = hwy > 30, size = class)) +
facet_wrap(~ manufacturer, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = hwy > 30, size = cty)) +
facet_wrap(~ manufacturer, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = hwy > 30)) +
facet_wrap(~ manufacturer, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = hwy > 30)) +
facet_grid(drv ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = hwy > 30)) +
facet_grid(. ~ cyl)
print(mpg)
print(mpg = all)
print(mpg, n = 100)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = hwy > 30)) +
facet_grid(cyl ~ .)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(cyl ~ drv)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ manufacturer)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(. ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = hwy, y = cyl, colour = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = disp, y = hwy, colour = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class)
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggcorrplot)
library(lubridate)
library(forecast)
library(zoo)
# Set the proper working directory
setwd("/Users/MichaelKuby/Documents/GitHub/CMPT318_CyberSecurity/CMPT318_Assignment_2/Group Assignment 2")
# Get the data from the data set
data <- read.table("Group_Assignment_2_Dataset.txt", header = TRUE)
# Convert the column Date to Date objects (so that we can extract)
data$Date = as.POSIXlt(data$Date, format = "%d/%m/%Y")
# Extract data from all complete weeks (we will take away the last day as it is a monday)
df <- data[data$Date >= as.POSIXlt("2007-01-01") & data$Date <= as.POSIXlt("2007-12-30"),]
# Parse column 2 into separate columns
dfsplit <- strsplit(df[,2], ",") # split the data
df2 <- data.frame(dfsplit) # Put the data into a df
df2 <- as.data.frame(t(df2)) #transpose to turn rows into cols
rm(dfsplit)
# Reindexing with help from James Comment:
# https://stackoverflow.com/questions/7567790/change-the-index-number-of-a-dataframe
rownames(df2) <- 1:nrow(df2)
df2 <- subset(df2, select = -V1) # Drop all columns we dont need
df2$V2 <- substr(df2$V2, 2, 9) # Drop the quotations from "time" column
# Rename the column names
colnames(df2) <- c("Time", "Global_active_power", "Global_reactive_power", "Voltage", "Global_intensity", "Sub_metering_1", "Sub_metering_2", "Sub_metering_3")
# Merge Date and Time into one column
df$Date <- as.POSIXlt(paste(df$Date, df2$Time), format = "%Y-%m-%d %H:%M:%S")
# Drop the columns that we don't want anymore
df <- subset (df, select = Date)
df$Time <- df2$Time
df2 <- subset (df2, select = -Time)
# Merge df and df2 and deselect all we dont need
df <- cbind(df, df2)
df <- subset (df, select = -c( Global_reactive_power, Global_active_power, Voltage, Sub_metering_1, Sub_metering_2, Sub_metering_3) )
df$Day = weekdays(as.Date(df$Date))
#Convert char to double
df$Global_intensity <- as.double(df$Global_intensity) # Convert char to double
rm(df2)
rm(data)
# n weeks, ms samples and msn number of samples returned for the week
n = 52
nw = 1
msn = 10080
ms = 10
df_ma <- data.frame(Date = df$Date,
Num_week=strftime(df$Date, format = "%V"),
Day = strftime(df$Date, format = "%A"),
Time = strftime(df$Date, format = "%T"),
Moving_average=df$Global_intensity)
# breakdown the average calculations per week
df_ma$Moving_average <- ma(df$Global_intensity, ms, centre = TRUE)
# create average week
average_week = df_ma %>%
group_by(Time, Day) %>%
summarise(Average = mean(df_ma$Moving_average))
View(df_ma)
?group_by
# create average week
average_week <- df_ma %>% group_by(Time) %>%
summarise(Average = mean(df_ma$Moving_average))
# create average week
average_week <- df_ma %>% group_by(Day) %>%
summarise(Average = mean(df_ma$Moving_average))
View(average_week)
# create average week
average_week <- df_ma %>% group_by(Day) %>%
summarise(Average = mean(Moving_average))
View(average_week)
# breakdown the average calculations per week
df_ma$Moving_average <- ma(df$Global_intensity, ms, centre = TRUE)
# create average week
average_week <- df_ma %>% group_by(Day) %>%
summarise(Average = mean(Moving_average))
View(average_week)
# create average week
average_week <- df_ma %>% group_by(Day) %>%
summarise(Average = mean(df_ma$Moving_average))
View(average_week)
# create average week
average_week <- df_ma %>% group_by(Day) %>%
summarise(Average = sum(Moving_average))
View(average_week)
# create average week
average_week <- df_ma %>% group_by(Day, Time)
View(average_week)
View(average_week)
average_week %>% summarise(
average = mean(Moving_average)
)
View(average_week)
average_week <- average_week %>% summarise(
average = mean(Moving_average)
)
# create average week
average_week <- df_ma %>% group_by(Day, Time)
average_week <- average_week %>% summarise(
average = mean(Moving_average)
)
View(average_week)
df_ma <- data.frame(Date = df$Date,
Num_week=strftime(df$Date, format = "%V"),
Day = strftime(df$Date, format = "%A"),
Time = strftime(df$Date, format = "%T"),
Moving_average=df$Global_intensity)
rm(average_week)
# breakdown the average calculations per week
df_ma$Moving_average <- ma(df$Global_intensity, ms, centre = TRUE)
View(df_ma)
# create average week
average_week <- df_ma %>% group_by(Day, Time)
average_week <- average_week %>% summarise(
average = mean(Moving_average)
)
View(average_week)
# create average week
average_week <- df_ma %>% group_by(Day, Time)
average_week <- average_week %>% summarise(
Moving_average = mean(Moving_average)
)
View(average_week)
# manually reorder average_week
order <- c("Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday", "Sunday")
average_week = average_week %>%
mutate(Day =  factor(Day, levels = order)) %>%
arrange(Day)
rm(average_week)
# breakdown the average calculations per week
df_ma$Moving_average <- ma(df$Global_intensity, ms, centre = TRUE)
# create average week
average_week <- df_ma %>% group_by(Day, Time)
View(average_week)
average_week <- average_week %>% summarise(
Moving_average = mean(Moving_average)
)
?mean
# create average week
average_week <- df_ma %>% group_by(Day, Time)
rm(average_week)
# create average week
average_week <- df_ma %>% group_by(Day, Time)
average_week <- average_week %>% summarise(
Moving_average = mean(Moving_average, na.rm = TRUE)
)
View(average_week)
# manually reorder average_week
order <- c("Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday", "Sunday")
average_week = average_week %>%
mutate(Day =  factor(Day, levels = order)) %>%
arrange(Day)
?summarise()
# Compute Squared Error
for (i in 1:n)
{
df_ma[df_ma$Num_week == i, "Squared_error"] <- (average_week$`Averaged Global_intensity` - df_ma[df_ma$Num_week == i, "Moving_average"])^2
}
View(df_ma)
# Compute Squared Error
for (i in 1:n)
{
df_ma[df_ma$Num_week == i, "Squared_error"] <- (average_week$'Moving_average' - df_ma[df_ma$Num_week == i, "Moving_average"])^2
}
View(df_ma)
df_ma[df_ma$Num_week == 1, "Moving_average"]
df_ma[df_ma$Num_week == 6, "Moving_average"]
df_ma[df_ma$Num_week == 1, "Moving_average"]
df_ma$Moving_average[df_ma$Num_week == 1]
df_ma$Moving_average[df_ma$Num_week == 1,]
df_ma$Moving_average[df_ma$Num_week == 01]
df_ma$Moving_average[df_ma$Num_week == 01]
average_week$'Moving_average' - df_ma[df_ma$Num_week == i, "Moving_average"]
for (i in 1:n)
{
df_ma[df_ma$Num_week == i, "Squared_error"] <- (average_week$'Moving_average' - df_ma[df_ma$Num_week == i, "Moving_average"])^2
}
?strftime
for (i in 01:n)
{
df_ma[df_ma$Num_week == i, "Squared_error"] <- (average_week$'Moving_average' - df_ma[df_ma$Num_week == i, "Moving_average"])^2
}
View(average_week)
View(df_ma)
for (i in 01:n)
i
i
rm(i)
for (i in 01:n)
{
df_ma[df_ma$Num_week == i, "Squared_error"] <- (average_week$'Moving_average' - df_ma[df_ma$Num_week == i, "Moving_average"])^2
}
View(df_ma)
df_ma$Num_week <- sub("^0", "", df_ma$Num_week)
View(average_week)
# breakdown the average calculations per week
df_ma$Moving_average <- ma(df$Global_intensity, ms, centre = TRUE)
# create average week
average_week <- df_ma %>% group_by(Day, Time)
average_week <- average_week %>% summarise(
Moving_average = mean(Moving_average, na.rm = TRUE)
)
# manually reorder average_week
order <- c("Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday", "Sunday")
average_week = average_week %>%
mutate(Day =  factor(Day, levels = order)) %>%
arrange(Day)
for (i in 01:n)
rm(i)
for (i in 01:n)
{
df_ma[df_ma$Num_week == i, "Squared_error"] <- (average_week$'Moving_average' - df_ma[df_ma$Num_week == i, "Moving_average"])^2
}
View(df_ma)
# aggregate by the week, taking the sum of squared errors
weekly_error <- df_ma %>% group_by(Num_week)
View(weekly_error)
weekly_error <- weekly_error %>% summarise(
Sum_of_Squared_Errors = sum(Squared_error), na.rm = TRUE
)
View(weekly_error)
# aggregate by the week, taking the sum of squared errors
weekly_error <- df_ma %>% group_by(Num_week)
weekly_error <- weekly_error %>% summarise(
Sum_of_Squared_Errors = sum(Squared_error), na.rm = FALSE
)
View(weekly_error)
# aggregate by the week, taking the sum of squared errors
weekly_error <- df_ma %>% group_by(Num_week)
weekly_error <- weekly_error %>% summarise(
Sum_of_Squared_Errors = sum(Squared_error)
)
View(weekly_error)
df_ma2 <- na.omit(df_ma)
# aggregate by the week, taking the sum of squared errors
weekly_error <- df_ma2 %>% group_by(Num_week)
weekly_error <- weekly_error %>% summarise(
Sum_of_Squared_Errors = sum(Squared_error)
)
View(weekly_error)
weekly_error2 <- aggregate(x = df_ma2$Squared_error, by = list(df_ma2$Num_week), FUN = sum, simplify = TRUE)
colnames(weekly_error) <- c("Week", "Sum of Squared Errors")
View(weekly_error2)
for (i in 1:n)
for (j in 1:n)
{
weekly_error[weekly_error$Week == j, "Mean Squared Error"] <- weekly_error[weekly_error$Week == j, "Sum of Squared Errors"] / length(which(df_ma2$Num_week == j))
}
View(weekly_error)
weekly_error$rank <- rank(weekly_error$`Mean Squared Error`)
dates <- data.frame(Date=df$Date[df$Date >= as.POSIXlt("2007-04-23") & df$Date < as.POSIXlt("2007-04-30")])
dates <- na.omit(dates)
df_plot <- data.frame(Date = dates,
Week_17 = df_ma[df_ma$Num_week == 17, "Moving_average"],
Week_52 = df_ma[df_ma$Num_week == 52, "Moving_average"],
Average_Week = average_week$`Averaged Global_intensity`)
View(average_week)
df_plot <- data.frame(Date = dates,
Week_17 = df_ma[df_ma$Num_week == 17, "Moving_average"],
Week_52 = df_ma[df_ma$Num_week == 52, "Moving_average"],
Average_Week = average_week$`Moving_average`)
ggplot(data = df_plot) +
geom_point(mapping = aes(x = Date, y = Week_17, color = "Least Anomalous (Week 17)")) +
geom_point(mapping = aes(x = Date, y = Week_52, color = "Most Anomalous (Week 52)")) +
geom_point(mapping = aes(x = Date, y = Average_Week, color = "Average Week"))+
labs( title = "Smoothened Global Intensity vs. Time") +
guides(color = guide_legend(title = "Colour Guide")) +
xlab("Time") +
ylab("Global Intensity (Amperes)")
weekly_error <- subset (weekly_error, select = c( "Week", "Mean Squared Error", "rank" ))
View(df_plot)
View(weekly_error)
sd(weekly_error$`Mean Squared Error`)
mean(weekly_error$`Mean Squared Error`)
